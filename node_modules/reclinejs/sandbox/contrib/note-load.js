// Parse a summary to extract title, tags, location and start and end
parseNoteSummary = function(text) {
  var result = {
    title: '',
    tags: []
  };
  var ourtext = text;
  regex = / #([\w-\.]+)/;
  while(ourtext.search(regex)!=-1) {
    var out = ourtext.match(regex)[1];
    result.tags.push(out);
    ourtext = ourtext.replace(regex, '');
  }
  regex = / ?@([^@]+)@/;
  if(ourtext.search(regex)!=-1) {
    var match = ourtext.match(regex);
    result['location'] = match[1];
    ourtext = ourtext.replace(regex, ' $1');
  }

  var startEnd = [];

  var time = ourtext.split(': ')[0];
  var startEnd = time.split(' to ');

  regex = / ?\^([^^]+)\^/;
  // alternative based on ^...^
  while(ourtext.search(regex)!=-1) {
    var out = ourtext.match(regex)[1];
    startEnd.push(out);
    ourtext = ourtext.replace(regex, ' $1');
  }
  if (startEnd.length>=1) {
    result['start'] = startEnd[0];
  }
  if (startEnd.length>=2) {
    result['end'] = startEnd[1];
  }

  result.title = ourtext.trim();
  return result;
};

// Parse a date into ISO 8601 format (yyyy-mm-dd) using datejs library
// 
// @return: parsed date in yyyy-mm-dd format or null if could not parse.
//
// TODO: at the moment will always provide mm and dd even if not in input
parseDate = function(date) {
  if (date) {
    var parsedDate = Date.parse(date);
    if (parsedDate) {
      return parsedDate.toString('yyyy-MM-dd');
    }
  }
}

exports.load = function(filepath, dest) {
  var fs = require('fs');
  var text = fs.readFileSync(filepath, 'utf8');
  var parsed = text.split('\n\n').map(function(note) {
    return parseNoteSummary(note);
  });
  fs.writeFileSync('data.json', JSON.stringify(parsed));
  if (dest) {
    count = 1;
    parsed.forEach(function(note) {
      note.id = count;
      // upsert(dest, note);
      count++;
      console.log('uploaded: ' + note.title);
    });
  } else {
    console.log(parsed);
  }
}

function upsert(endpoint, doc) {
  console.log(endpoint);
  var http = require('http');
  var url = require('url');
  var parts = url.parse(endpoint);
  var options = {
    host: parts.hostname,
    path: parts.path,
    port: parts.port,
    method: 'POST'
  };
  console.log(options);

  var req = http.request(options, function(res) {
    console.log('STATUS: ' + res.statusCode);
    console.log('HEADERS: ' + JSON.stringify(res.headers));
    res.setEncoding('utf8');
    res.on('data', function (chunk) {
      console.log('BODY: ' + chunk);
    });
  });
  req.write(JSON.stringify(doc));
  req.end();
}
